name: Azure Container Apps - Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: vinodelectronics
  CONTAINER_NAME: vinod-electronics-app
  RESOURCE_GROUP: rg-vinod-electronics
  CONTAINER_APP_NAME: vinod-electronics
  CONTAINER_APP_ENV: vinod-electronics-env

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: üîÑ Checkout repository
      uses: actions/checkout@v4

    - name: üê≥ Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: üîê Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: üèóÔ∏è Build and push container image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:latest
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/develop'
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: üîê Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: üöÄ Deploy to Azure Container Apps (Staging)
      uses: azure/container-apps-deploy-action@v1
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        container-app-name: ${{ env.CONTAINER_APP_NAME }}-staging
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
        environment-variables: |
          NODE_ENV=staging
          PORT=5001
          JWT_SECRET=${{ secrets.JWT_SECRET_STAGING }}
          GOOGLE_SHEET_ID=${{ secrets.GOOGLE_SHEET_ID }}
          GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
          CACHE_TTL=3600000
          DATA_REFRESH_INTERVAL=86400000
          RATE_LIMIT_WINDOW_MS=900000
          RATE_LIMIT_MAX_REQUESTS=100
          ALLOWED_ORIGINS=https://${{ env.CONTAINER_APP_NAME }}-staging.azurecontainerapps.io

    - name: üß™ Run staging tests
      run: |
        echo "üß™ Running staging environment tests..."
        # Wait for deployment
        sleep 30
        
        # Test health endpoint
        curl -f https://${{ env.CONTAINER_APP_NAME }}-staging.azurecontainerapps.io/health || exit 1
        
        # Test frontend
        curl -f https://${{ env.CONTAINER_APP_NAME }}-staging.azurecontainerapps.io/ || exit 1
        
        echo "‚úÖ Staging tests passed!"

  deploy-production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: üîê Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: üöÄ Deploy to Azure Container Apps (Production)
      uses: azure/container-apps-deploy-action@v1
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        container-app-name: ${{ env.CONTAINER_APP_NAME }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
        environment-variables: |
          NODE_ENV=production
          PORT=5001
          JWT_SECRET=${{ secrets.JWT_SECRET_PRODUCTION }}
          GOOGLE_SHEET_ID=${{ secrets.GOOGLE_SHEET_ID }}
          GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
          CACHE_TTL=3600000
          DATA_REFRESH_INTERVAL=86400000
          RATE_LIMIT_WINDOW_MS=900000
          RATE_LIMIT_MAX_REQUESTS=150
          ALLOWED_ORIGINS=https://${{ env.CONTAINER_APP_NAME }}.azurecontainerapps.io,https://vinod-electronics.com

    - name: üß™ Run production smoke tests
      run: |
        echo "üß™ Running production smoke tests..."
        # Wait for deployment
        sleep 30
        
        # Test health endpoint
        curl -f https://${{ env.CONTAINER_APP_NAME }}.azurecontainerapps.io/health || exit 1
        
        # Test frontend
        curl -f https://${{ env.CONTAINER_APP_NAME }}.azurecontainerapps.io/ || exit 1
        
        echo "‚úÖ Production smoke tests passed!"

    - name: üìä Performance test
      run: |
        echo "üöÄ Running performance tests..."
        # Basic load test with curl
        for i in {1..10}; do
          curl -s -o /dev/null -w "%{http_code} %{time_total}s\n" \
            https://${{ env.CONTAINER_APP_NAME }}.azurecontainerapps.io/health
          sleep 1
        done
