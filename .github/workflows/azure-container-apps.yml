name: Azure Container Apps - Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: vinodelectronics
  CONTAINER_NAME: vinod-electronics
  RESOURCE_GROUP: ve
  CONTAINER_APP_NAME: vinod-electronics
  CONTAINER_APP_ENV: vinod-electronics-env

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔄 Checkout repository
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔐 Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: 🏗️ Build and push container image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:latest
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/develop'
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: 🔄 Checkout repository
      uses: actions/checkout@v4

    - name: 🔐 Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 🚀 Deploy to Azure Container Apps (Staging)
      run: |
        az deployment group create \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --template-file infrastructure/main.bicep \
          --parameters @infrastructure/staging.parameters.json \
          --parameters containerImage=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}

    - name: 🧪 Run staging tests
      run: |
        echo "🧪 Running staging environment tests..."
        # Wait for deployment
        sleep 30
        
        # Test health endpoint
        curl -f https://vinod-electronics-staging.redbay-00742d68.eastus.azurecontainerapps.io/health || exit 1
        
        # Test frontend
        curl -f https://vinod-electronics-staging.redbay-00742d68.eastus.azurecontainerapps.io/ || exit 1
        
        echo "✅ Staging tests passed!"

  deploy-production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: 🔄 Checkout repository
      uses: actions/checkout@v4

    - name: 🔐 Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 🚀 Deploy to Azure Container Apps (Production)
      run: |
        az deployment group create \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --template-file infrastructure/main.bicep \
          --parameters @infrastructure/main.parameters.json \
          --parameters containerImage=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}

    - name: 🧪 Run production smoke tests
      run: |
        echo "🧪 Running production smoke tests..."
        # Wait for deployment
        sleep 30
        
        # Test health endpoint
        curl -f https://vinod-electronics.kindplant-cbf8e6ac.eastus.azurecontainerapps.io/health || exit 1
        
        # Test frontend
        curl -f https://vinod-electronics.kindplant-cbf8e6ac.eastus.azurecontainerapps.io/ || exit 1
        
        echo "✅ Production smoke tests passed!"

    - name: 📊 Performance test
      run: |
        echo "🚀 Running performance tests..."
        # Basic load test with curl
        for i in {1..10}; do
          curl -s -o /dev/null -w "%{http_code} %{time_total}s\n" \
            https://vinod-electronics.kindplant-cbf8e6ac.eastus.azurecontainerapps.io/health
          sleep 1
        done
        echo "✅ Performance tests completed!"
